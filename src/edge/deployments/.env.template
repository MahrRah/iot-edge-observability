#
# CONNECTION STRINGS
#
IOTHUB_CONNECTION_STRING="{{ IOTHUB_CONNECTION_STRING }}"

#
# CONTAINER REGISTRY
#
# Settings for your default container registry.
# - Local Registry: Set CONTAINER_REGISTRY_SERVER to "localhost:5000" - USERNAME/PASSWORD are not required.
# - Azure Container Registry: Set CONTAINER_REGISTRY_SERVER to "myregistry.azurecr.io". USERNAME/PASSWORD are required.
# - Docker Hub: Set CONTAINER_REGISTRY_SERVER and CONTAINER_REGISTRY_USERNAME to your Docker Hub username. Set CONTAINER_REGISTRY_PASSWORD to your Docker Hub password.

CONTAINER_REGISTRY_SERVER="{{ CONTAINER_REGISTRY_SERVER }}"
CONTAINER_REGISTRY_USERNAME="{{ CONTAINER_REGISTRY_USERNAME }}"
CONTAINER_REGISTRY_PASSWORD="{{ CONTAINER_REGISTRY_PASSWORD }}"

# To specify additional container registries ensure the prefix is CONTAINER_REGISTRY_SERVER_, CONTAINER_REGISTRY_USERNAME_, CONTAINER_REGISTRY_PASSWORD_
# And the token following the prefix uniquely associates the SERVER/USERNAME/PASSWORD
# Token can be any string of alphanumeric characters

# CONTAINER_REGISTRY_SERVER_2=""
# CONTAINER_REGISTRY_USERNAME_2=""
# CONTAINER_REGISTRY_PASSWORD_2=""

#
# HOST
#

RUNTIME_TAG="1.0"

#
# MODULES
#

BYPASS_MODULES=""
# "" - to build all modules
# "*" - to bypass all modules
# "filtermodule, module1" - Comma delimited list of modules to bypass when building

CONTAINER_TAG=""

#
# SOLUTION SETTINGS
#

CONFIG_OUTPUT_DIR="config"
DEPLOYMENT_CONFIG_TEMPLATE_FILE="deployment.template.json"
DEPLOYMENT_CONFIG_DEBUG_TEMPLATE_FILE="deployment.debug.template.json"
DEFAULT_PLATFORM="amd64"
MODULES_PATH="../modules"
ENVIRONMENT={{ ENVIRONMENT }}

LOGS_PATH="logs"

#
# DOCKER LOGS COMMAND
#
# Command used when calling iotedgedev docker --logs or --show-logs

LOGS_CMD="start /B start cmd.exe @cmd /k docker logs {0} -f"
# "start /B start cmd.exe @cmd /k docker logs {0} -f" - for CMD
# "docker logs {0} -f -new_console:sV" - for ConEmu

#
# AZURE SETTINGS
#
# These settings will override parameters to the `iotedgedev azure --setup` command.
# CREDENTIALS="username password"
# SERVICE_PRINCIPAL="username password tenant"
# RESOURCE_GROUP_LOCATION="australiaeast|australiasoutheast|brazilsouth|canadacentral|canadaeast|centralindia|centralus|eastasia|eastus|eastus2|japanwest|japaneast|northeurope|northcentralus|southindia|uksouth|ukwest|westus|westeurope|southcentralus|westcentralus|westus2"
# IOTHUB_SKU="F1|S1|S2|S3"
# UPDATE_DOTENV="True|False"

SUBSCRIPTION_ID="{{ SUBSCRIPTION_ID }}"
RESOURCE_GROUP_NAME="{{ RESOURCE_GROUP_NAME }}"
RESOURCE_GROUP_LOCATION="{{ RESOURCE_GROUP_LOCATION }}"
IOTHUB_NAME="{{ IOTHUB_NAME }}"
IOTHUB_SKU="{{ IOTHUB_SKU }}"
IOT_EDGE_DEVICE_NAME="{{ IOT_EDGE_DEVICE_NAME }}"
CREDENTIALS="{{ CREDENTIALS }}"
SERVICE_PRINCIPAL="{{ SERVICE_PRINCIPAL }}"
UPDATE_DOTENV=False
IOT_HUB_NAME_ARR="{{ IOTHUB_NAME }}"

# LVA Settings

VIDEO_INPUT_FOLDER_ON_DEVICE="/tmp/rtspsim/input/"
VIDEO_OUTPUT_FOLDER_ON_DEVICE="/var/media/"
AZURE_MEDIA_SERVICES_ARM_ID="{{ AZURE_MEDIA_SERVICES_ARM_ID }}"
AAD_TENANT_ID="{{ AAD_TENANT_ID }}"
AAD_SERVICE_PRINCIPAL_ID="{{ AAD_SERVICE_PRINCIPAL_ID }}"
AAD_SERVICE_PRINCIPAL_SECRET="{{ AAD_SERVICE_PRINCIPAL_SECRET }}"

# IoT Edge Hub Dev workaround
#
# Change this variable to container when deploying to a real edge device and back to service when deploying to iotedgedev!
IPC_MODE="{{ IPC_MODE }}"

# GPU Settings
GPU_RUNTIME="{{ GPU_RUNTIME }}" # Change to nvidia when running GPU enabled containers with GPU's

# Mock GRPC settings
USE_MOCK_GRPC={{ USE_MOCK_GRPC }}

# Tool eventhub_messages.py settings
IOTHUB_EVENTHUB_CONNECTION_STRING="{{ IOTHUB_EVENTHUB_CONNECTION_STRING }}"

# Monitoring Module
#
UPLOAD_TARGET="AzureMonitor"
LOG_ANALYTICS_WORKSPACE_ID="{{ LOG_ANALYTICS_WORKSPACE_ID }}"
LOG_ANALYTICS_WORKSPACE_KEY="{{ LOG_ANALYTICS_WORKSPACE_KEY }}"
IOT_HUB_RESOURCE_ID="{{ IOT_HUB_RESOURCE_ID }}"
METRICS_ENDPOINT="http://edgeHub:9600/metrics,http://edgeAgent:9600/metrics,http://mock_inference_module:9600/"
APP_INSIGHTS_CONNECTION_STRING ="{{ APP_INSIGHTS_CONNECTION_STRING }}"

# DPS
#
# DPS_ROOT_CA_NAME=dps-root-ca
# DPS_NAME={{ DPS_NAME }}
