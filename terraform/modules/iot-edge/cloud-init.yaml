#cloud-config

apt:
  preserve_sources_list: true
  sources:
    msft.list:
      source: 'deb https://packages.microsoft.com/ubuntu/18.04/multiarch/prod bionic main'
      key: |
        -----BEGIN PGP PUBLIC KEY BLOCK-----
        Version: GnuPG v1.4.7 (GNU/Linux)

        mQENBFYxWIwBCADAKoZhZlJxGNGWzqV+1OG1xiQeoowKhssGAKvd+buXCGISZJwT
        LXZqIcIiLP7pqdcZWtE9bSc7yBY2MalDp9Liu0KekywQ6VVX1T72NPf5Ev6x6DLV
        7aVWsCzUAF+eb7DC9fPuFLEdxmOEYoPjzrQ7cCnSV4JQxAqhU4T6OjbvRazGl3ag
        OeizPXmRljMtUUttHQZnRhtlzkmwIrUivbfFPD+fEoHJ1+uIdfOzZX8/oKHKLe2j
        H632kvsNzJFlROVvGLYAk2WRcLu+RjjggixhwiB+Mu/A8Tf4V6b+YppS44q8EvVr
        M+QvY7LNSOffSO6Slsy9oisGTdfE39nC7pVRABEBAAG0N01pY3Jvc29mdCAoUmVs
        ZWFzZSBzaWduaW5nKSA8Z3Bnc2VjdXJpdHlAbWljcm9zb2Z0LmNvbT6JATUEEwEC
        AB8FAlYxWIwCGwMGCwkIBwMCBBUCCAMDFgIBAh4BAheAAAoJEOs+lK2+EinPGpsH
        /32vKy29Hg51H9dfFJMx0/a/F+5vKeCeVqimvyTM04C+XENNuSbYZ3eRPHGHFLqe
        MNGxsfb7C7ZxEeW7J/vSzRgHxm7ZvESisUYRFq2sgkJ+HFERNrqfci45bdhmrUsy
        7SWw9ybxdFOkuQoyKD3tBmiGfONQMlBaOMWdAsic965rvJsd5zYaZZFI1UwTkFXV
        KJt3bp3Ngn1vEYXwijGTa+FXz6GLHueJwF0I7ug34DgUkAFvAs8Hacr2DRYxL5RJ
        XdNgj4Jd2/g6T9InmWT0hASljur+dJnzNiNCkbn9KbX7J/qK1IbR8y560yRmFsU+
        NdCFTW7wY0Fb1fWJ+/KTsC4=
        =J6gs
        -----END PGP PUBLIC KEY BLOCK-----
packages:
  - moby-cli
  - libiothsm-std
  - moby-engine
write_files:
  - path: /etc/logrotate.d/moby-container-logs
    permissions: '0644'
    owner: root:root
    content: |
      /var/lib/docker/containers/*/*-json.log{
        copytruncate
        daily
        rotate7
        delaycompress
        compress
        notifempty
        missingok
      }
runcmd:
  - |
    set -x
    (
      # Enable only secure ssh ciphers
      echo 'ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr' >> /etc/ssh/sshd_config

      # Wait for docker daemon to start
      while [ $(ps -ef | grep -v grep | grep docker | wc -l) -le 0 ]; do
        sleep 3
      done

      # Prevent iotedge from starting before everythign is set up
      sudo ln -s /dev/null /etc/systemd/system/iotedge.service
      apt install iotedge
      sed -i "s#\(device_connection_string: \).*#\1\"<REPLACE_WITH_CONNECTION_STRING>\"#g" /etc/iotedge/config.yaml 
      chown -R iotedge:iotedge /etc/iotedge

      # Check if a NVIDIA GPU is installed.
      lspci -vnnn | grep NVIDIA
      HAS_GPU=$?
      if [ $HAS_GPU -eq 0 ]; then
        # Add CUDA driver repo's
        CUDA_REPO_PKG=cuda-repo-ubuntu1804_10.2.89-1_amd64.deb
        wget -O /tmp/$${CUDA_REPO_PKG} https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/$${CUDA_REPO_PKG}
        sudo dpkg -i /tmp/$${CUDA_REPO_PKG}
        sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
        rm -f /tmp/$${CUDA_REPO_PKG}

        # Install CUDA drivers
        sudo apt update
        sudo apt install  -y --no-install-recommends --assume-yes cuda-drivers

        # Add the nvidia-docker repos
        distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \
        && curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - \
        && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list

        # We need to install nvidia-docker2 but for some reason, the dependency resolution in regards to moby-engine is broken.
        # Due to that we need to manually download and install the packages.
        sudo apt update
        sudo apt download libnvidia-container-tools libnvidia-container1 nvidia-container-runtime nvidia-container-toolkit nvidia-docker2
        sudo dpkg --ignore-depends=docker-ce -i libnvidia-container1* libnvidia-container-tools* nvidia-container-toolkit* nvidia-container-runtime* nvidia-docker2*
        sudo systemctl restart docker
      fi

      # Configure docker logging
      echo "{
        \"log-driver\": \"json-file\",
        \"log-opts\": {
          \"max-size\": \"10m\",
          \"max-file\": \"10\"
        }
      }" >> /etc/docker/daemon.json
      systemctl restart docker

      # Once everything is installed, start iot edge
      systemctl unmask iotedge
      systemctl start iotedge
    ) &
